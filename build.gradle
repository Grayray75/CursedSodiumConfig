plugins {
    id "fabric-loom" version "1.3.9"
    id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "maven.modrinth:sodium:${project.sodium_version}"

    modRuntimeOnly "maven.modrinth:modmenu:${project.modmenu_version}"
}

task buildWinForms(type: Exec) {
    workingDir "WinForms/"
    commandLine "cmd", "/c", "dotnet build --configuration Release"
}

task copyWinFormsFiles(type: Copy) {
    dependsOn(buildWinForms)

    from "WinForms/bin/Release/net6.0-windows"
    into "src/main/resources/assets/cursedsodiumconfig/WinForms"
    include "*.exe", "*.dll", "*.json"
}

processResources {
    dependsOn(copyWinFormsFiles)

    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // generating sources doesn't work for some reason
    //withSourcesJar()
}

jar {
    from "LICENSE.txt"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        // mavenLocal()
    }
}
